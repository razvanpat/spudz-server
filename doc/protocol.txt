Protocol

<< - client to server
>> - server to client

*********** MEAN Stack ************

// Opening sequence
Connection will be made by MEAN stack and passed along to the game

<< Open game (connect la websocket)
<< Send credentials
		"credentials"
		- id:String
		- nickname:String
		

//Matchmaking	
<< "find_match" 
		"find_match"
>> "match_found" 
		"match_found"
		- firstplayer: "playerID"
		

*********** Game client ************


//Select characters		

<< "select character"
	{
		character_id: x
	}


>> "opponent_character"
	{
		character_id: x
	}

>> "start_match"


//P1 makes a move
<< "move"
		- action: ....
		- state {
				P1:{ 
					position: {x,y}
					health:z
				}
			}
			
//P2 responds to opponent move
>> "move"
		- ...
<< "reconciliation"
		- state {.....}

//P2 makes a move		
<< "move"
		- ...
		
//Win (player_id of the winner)
>> "win"
		- player_id:x


// opponent disconnected, you win
>> "opponent_disconnected"

// your move time has expired, it's your opponent's turn to move
>> "move_time_expired"

// you skip your round
<< "move_skip"

// your opponent skipped the round, it's your turn
>> "opponent_skip"

// your receive an error message from the server
>> "error"
	{
		message: "Lorem ipsum"
	}